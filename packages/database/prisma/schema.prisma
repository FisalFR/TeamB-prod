// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "../.prisma/client"
  engineType      = "binary"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  // url      = "postgresql://teamb:teamb20@database.cs.wpi.edu:5432/teambdb?schema=teamb"
}

// example table used in the express router example
model HighScore {
  id    Int      @id @default(autoincrement())
  time  DateTime
  score Int
}

model l1Nodes {
  nodeID    String    @id
  xcoord    Int
  ycoord    Int
  floor     String
  building  String
  nodeType  String
  longName  String
  shortName String
  startEdge l1Edges[] @relation(name: "startNode")
  endEdge   l1Edges[] @relation(name: "endNode")
}

model l1Edges {
  startNodeID String
  endNodeID   String
  startNode   l1Nodes @relation(name: "startNode", fields: [startNodeID], references: [nodeID])
  endNode     l1Nodes @relation(name: "endNode", fields: [endNodeID], references: [nodeID])

  @@id([startNodeID, endNodeID])
}

model languageInterpreterRequests {
  lid      Int    @id @default(autoincrement())
  language String
  location String
}

model users {
  username  String     @id
  password  String
  firstName String
  lastName  String
  gender    String
  type      String
  patients  patient[]  @relation(name: "patientUsernameID")
  employees employee[] @relation(name: "employeeUsernameID")
}

model patient {
  patientUsername   String @id
  reasonToStay      String
  patientUsernameID users  @relation(name: "patientUsernameID", fields: [patientUsername], references: [username])
}

model employee {
  employeeUsername   String        @id
  salary             Int
  employeeUsernameID users         @relation(name: "employeeUsernameID", fields: [employeeUsername], references: [username])
  interpreters       interpreter[] @relation(name: "interpreterUsernameID")
}

model interpreter {
  interpreterUsername   String   @id
  language              String
  native                Boolean
  interpreterUsernameID employee @relation(name: "interpreterUsernameID", fields: [interpreterUsername], references: [employeeUsername])
}

model maintenances {
  mid      Int    @id @default(autoincrement())
  issue    String
  location String
  isUrgent String
  feedback String
}
